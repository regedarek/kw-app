= form_for form, as: :profile, url: profiles_path do |f|
  .row
    .large-12.columns
      - if form.errors.any?
        .callout.alert
          ul
            - form.errors.full_messages.each do |msg|
              li= msg
  = f.hidden_field :locale, value: I18n.locale

  .row
    .large-12.columns
      .callout.primary
        .row
          .large-2.columns
            = f.label :gender
            = f.select :gender, Db::Profile.genders.map { |w, _| [I18n.t(w), w] }, selected: form.gender, include_blank: true
          .large-3.columns
            = f.label :first_name
            = f.text_field :first_name
          .large-3.columns
            = f.label :last_name
            = f.text_field :last_name

          .large-4.columns
            = f.label :email
            = f.email_field :email

  .row
    .large-12.columns
      .callout.primary
        .row
          .large-4.columns
            = f.label :phone
            = f.text_field :phone

          .large-4.columns
            = f.label :birth_place
            = f.text_field :birth_place

          .large-4.columns
            = f.label :birth_date
            - birh_date = form.birth_date.to_date rescue nil
            = f.date_field :birth_date, value: birh_date

  .row
    .large-12.columns
      .callout.primary
        .row
          .large-3.columns
            = f.label :optional_address
            = f.text_field :optional_address

          .large-3.columns
            = f.label :city
            = f.text_field :city

          .large-3.columns
            = f.label :postal_code
            = f.text_field :postal_code

          .large-3.columns
            = f.label :photo
            = f.file_field :photo

  .row
    .large-12.columns
      .callout.primary
        = f.label :acomplished_courses
        - (Db::Profile::ACOMPLISHED_COURSES - ['blank', 'basic_without_second']).each do |course|
          = f.check_box :acomplished_courses, { multiple: true, checked: form.acomplished_courses.include?(course) }, course.to_sym, nil
          = f.label "profile_acomplished_courses_#{course}".to_sym
          br

        = f.label :course_cert
        = f.file_field :course_cert
        | Jeśli nie posiadasz certyfikatu, załącz jakikolwiek potwierdzenie odbycia kursu lub skontaktuj się z naszym biurem.

  .row
    .large-6.columns
      = f.check_box :main_discussion_group, checked: true
      = f.label :main_discussion_group

  .row
    .large-6.columns
      .callout.primary
        = f.label :sections
        - Db::Profile::SECTIONS.each do |section|
          = f.check_box :sections, { multiple: true, checked: form.sections.include?(section) }, section.to_sym, nil
          = f.label "profile_sections_#{section}".to_sym
          br

    .large-6.columns
      .callout.secondary
        = f.label :recommended_by
        - Db::Profile::RECOMMENDED_BY.each do |place|
          = f.check_box :recommended_by, { multiple: true, checked: form.recommended_by.include?(place) }, place.to_sym, nil
          = f.label "profile_recommended_by_#{place}".to_sym
          br

  .row
    .large-12.columns
      blockquote.text-justify
        small= sanitize Management::SettingsRecord.find_by(path: '/zgloszenie')&.content
        .row
          .large-12.columns
            = f.check_box :terms_of_service
            = f.label :terms_of_service

  .row
    .large-12.columns
      = f.submit I18n.t(:apply_button), class: 'button large expanded'
