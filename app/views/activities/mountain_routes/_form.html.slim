.row
  .large-12.columns
    - if @route.errors.any?
      .callout.alert
        ul
          - @route.errors.full_messages.each do |msg|
            li= msg

.row
  .large-12.columns
    .callout.primary
      .row
        .large-2.columns
          = f.label :route_type, 'rodzaj wspinaczki'
          = f.select :route_type,
            Activities::MountainRouteRecord.route_types.map { |w, _| [I18n.t(w, scope: 'activerecord.attributes.db/activities/mountain_route'), w] },
            { selected: @route.route_type, include_blank: true }, { class: 'js-sport-type' }

        .large-3.columns
          = f.label :name, 'nazwa drogi, grani*'
          = f.text_field :name

        .large-2.columns
          = f.label :climbing_date, 'data przejścia*'
          = f.date_field :climbing_date, value: @route.climbing_date

        .js-route-length
          .large-2.columns
            = f.label :length, 'długość drogi w metrach'
            = f.number_field :length

        .js-route-area
          .large-2.columns
            = f.label :area, 'rejon'
            = f.text_field :area

        .js-route-custom-difficulty
          .large-1.columns
            = f.label :difficulty, 'trudność'
            = f.text_field :difficulty

        .js-route-kurtyka-difficulty
          .large-1.columns.end
            = f.label :kurtyka_difficulty, 'trudność'
            = f.select :kurtyka_difficulty,
              Db::Activities::MountainRoute.kurtyka_difficulties.map { |w, _| [w, w] },
              { selected: @route.kurtyka_difficulty, include_blank: true }, { class: '' }

          .large-2.columns.end
            = f.label :climb_style, 'styl'
            = f.select :climb_style,
              Db::Activities::MountainRoute.climb_styles.map { |w, _| [w, w] },
              { selected: @route.climb_style, include_blank: true }, { class: '' }

.row
  .large-12.columns
    .callout
      | Drogi oznaczone jako przejścia górskie liczą się do Górskich Dzików, drogi oznaczone jako wspinanie TRADowe liczą się do ligi tradowej.

.js-route-partners
  .row
    .large-12.columns
      .callout
        .row
          .large-3.columns
            = f.label :colleague_ids, 'partnerzy z klubu'
            = f.select :colleague_ids,
              Db::User.all.map { |u| [u.display_name, u.id] },
              { },
              { class: 'js-select-multiple', multiple: true }

          .large-3.columns
            = f.label :partners, 'partnerzy spoza klubu'
            = f.text_field :partners

          .large-3.columns
            span data-tooltip="" tabindex="1" title=("Jeżeli to nie ty jesteś autorem zdjęć podaj autora lub zostaw puste jeżeli to ty")
              = f.label :photograph, 'kto jest autorem zdjęć?'
            = f.text_field :photograph

          .large-3.columns
            = f.label :peak, 'szczyt'
            = f.text_field :peak

.row
  .js-route-hidden
    .large-3.columns
      .callout.secondary
        = f.check_box :hidden
        = f.label :hidden do
          span data-tooltip="" tabindex="1" title=("Przejście będzie widoczne tylko w na twojej stronie głównej.") Widoczne tylko dla mnie

  .large-6.columns.end
    .callout.success
      legend.legend subiektywna ocena urody drogi*

      = f.radio_button :rating, 1
      = f.label :rating_one, 'fuj, nie polecam'

      = f.radio_button :rating, 2
      = f.label :rating_two, 'warta przejścia'

      = f.radio_button :rating, 3
      = f.label :rating_three, 'absolutny klasyk'


.row
  .large-8.columns
    .callout
      = f.label :description, 'opis przejścia, uwagi dotyczące warunków'
      = f.trix_editor :description, style: 'min-height: 150px'

  .large-4.columns
    .callout.alert
      = f.label :attachments, 'Dodaj więcej zdjęć'
      = f.fields_for :photos_attributes do |p|
        = p.file_field :file, multiple: true, name: 'route[photos_attributes][][file]'
      br

    - if @route.photos.any?
      - @route.photos.select{|photo| !MimeMagic.by_path(photo.file.path)&.image? }.each do |photo|
        = link_to photo.file.url, download: File.basename(photo.file.path) do
          = image_tag('file.jpg', class: 'thumbnail', width: '58px')
          - if can?(:destroy, photo)
            = link_to upload_path(photo.id), data: { confirm: 'Jesteś pewien?' }, method: :delete, class: 'thumb-close-button' do
              span aria-hidden="true"  &times;
        br
      - @route.photos.select{|photo| MimeMagic.by_path(photo.file.path)&.image? }.each_with_index do |photo, i|
        - unless photo.file.blank? || photo.file.thumb.blank?
          = image_tag photo.file.thumb.url, class: 'thumbnail', data: { toggle: "photo-#{i}" }
          - if can?(:destroy, photo)
            = link_to upload_path(photo.id), data: { confirm: 'Jesteś pewien?' }, method: :delete, class: 'thumb-close-button' do
              span aria-hidden="true"  &times;

          div id="photo-#{i}" class="full reveal" data-reveal="" 
            = image_tag photo.file.url
            button.close-button aria-label=("Close reveal") data-close="" type="button" 
              span aria-hidden="true"  &times;
