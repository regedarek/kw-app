.column
  - if @profile.user.present?
    .row
      .large-6.columns 
        .callout.primary
          b Number członkowski(profilu): 
          = @profile.kw_id
          br
          b Imię i nazwisko: 
          = "#{@profile.first_name} #{@profile.last_name}"
          br
          b E-mail: 
          = @profile.email

          br
          b Telefon: 
          = @profile.phone
          br
          b Pesel: 
          = @profile.pesel
          br
      .large-6.columns 
        .callout.secondary
          b Number członkowski(użytkownika): 
          = @profile.user.kw_id
          br
          b Imię i nazwisko: 
          = "#{@profile.user.first_name} #{@profile.user.last_name}"
          br
          b E-mail: 
          = @profile.user.email
          br
          b Telefon: 
          = @profile.user.phone
          br
          b Role: 
          = @profile.user.roles.to_sentence
  - else
    .row
      .large-12.columns 
        .callout
          b Number członkowski(profilu): 
          = @profile.kw_id
          br
          b Imię i nazwisko: 
          = "#{@profile.first_name} #{@profile.last_name}"
          br
          b Płeć: 
          = @profile.gender
          br
          b E-mail: 
          = @profile.email
          br
          b Telefon: 
          = @profile.phone
  .row
    .large-6.columns
      .callout
        b Data urodzenia: 
        = @profile.birth_date
        br
        b Miejsce urodzenia: 
        = @profile.birth_place
        br
        b Adres zameldowania: 
        = @profile.main_address
        br
        b Kod pocztowy: 
        = @profile.postal_code
        br
        b Miasto: 
        = @profile.city
        br
        - if @profile.optional_address.present?
          b Adres kontaktowy: 
          = @profile.optional_address


    .large-6.columns
      .callout class="#{['list', 'blank'].any? { |c| @profile.acomplished_courses.include?(c) } ? 'alert' : '' }"
        b Kursy: 
        - if @profile.acomplished_courses.present?
          - @profile.acomplished_courses.each do |course|
            li
              = I18n.t("activemodel.attributes.user_management_profile_form.profile_acomplished_courses_#{course}")
        - else
          | brak
          br
        b Sekcje: 
        - if @profile.sections
          - @profile.sections.each do |section|
            li
              = I18n.t("activemodel.attributes.user_management_profile_form.profile_sections_#{section}")
  .row
    .large-6.columns
      .callout
        - if @profile.position.present?
          b Status członka: 
          - @profile.position.each do |course|
            li
              = I18n.t("activemodel.attributes.user_management_profile_form.profile_position_#{course}")
        - if @profile.date_of_death
          b Data śmierci: 
          = @profile.date_of_death
          br
        b Data zgłoszenia: 
        = @profile.created_at&.to_date&.to_s(:db)
        - if @profile.acceptor_id.present?
          br
          b Data akceptacji: 
          = @profile.accepted_at&.to_s(:db)
          br
          b Akceptujący: 
          = Db::User.find(@profile.acceptor_id).display_name
    .large-6.columns
      .callout
        - if @profile.recommended_by.present?
          b Dowiedział się od: 
          = @profile.recommended_by.to_sentence
          br
        b Główna grupa dyskusyjna: 
        = @profile.main_discussion_group? ? 'Tak' : 'Nie'
        br
        - if @profile.profession.present?
          b Profesja: 
          = @profile.profession

  .row
    - if @profile.photo.present?
      .large-6.columns
        .callout
          = link_to @profile.photo.url do
            = image_tag @profile.photo.thumb.url

    - if @profile.course_cert.present?
      .large-6.columns
        .callout
          - if MimeMagic.by_path(@profile.course_cert.path).image?
            - unless @profile.course_cert.blank? || @profile.course_cert.thumb.blank?
              = image_tag @profile.course_cert.thumb.url, class: 'thumbnail', data: { toggle: "cert-photo" }

              div id="cert-photo" class="full reveal" data-reveal="" 
                = image_tag @profile.course_cert.url
                button.close-button aria-label=("Close reveal") data-close="" type="button" 
                  span aria-hidden="true"  &times;
          - else
            = link_to @profile.course_cert.url, download: File.basename(@profile.course_cert.file.path) do
              = image_tag('file.jpg', class: 'thumbnail')
              |  
              = File.basename(@profile.course_cert.file.path)

  - if @profile.list
    .row
      .large-6.columns 
        b = "Wykaz do akceptacji - #{I18n.t("user_management.list.enums.section_types.#{@profile.list.section_type}").humanize}"
        .callout
          = sanitize @profile.list.description

      .large-3.columns 
        - if @profile.list.attachments.any?
          .row
            .large-12.columns
              b Załączniki do wykazu: 
              ul.no-bullet
                - @profile.list.attachments.select{|file| !MimeMagic.by_path(file.path).image? }.each do |attachment|
                  li
                    = link_to attachment.url, download: File.basename(attachment.file.path) do
                      = image_tag('file.jpg', class: 'thumbnail', size: '50x50')
                      |  
                      = File.basename(attachment.file.path)

                - @profile.list.attachments.select{|file| MimeMagic.by_path(file.path).image? }.each_with_index do |photo, i|
                  - unless photo.blank? || photo.thumb.blank?
                    li
                      = image_tag photo.thumb.url, size: '50x50', class: 'thumbnail', data: { toggle: "photo-#{i}" }

                    div id="photo-#{i}" class="reveal" data-reveal="" 
                      = image_tag photo.url
                      button.close-button aria-label=("Close reveal") data-close="" type="button" 
                        span aria-hidden="true"  &times;

      .large-3.columns 
        br
        .align-right
          - if @profile.list.accepted?
            .callout.success
              = "Zaakceptował #{Db::User.find(@profile.list.acceptor_id).display_name}"
          - else
            = link_to 'Zaakceptuj wykaz', accept_profile_list_path(profile_id: @profile.id, id: @profile.list.id), method: :post, class: 'button success'

  .row
    .large-12.columns 
      .callout class="#{@activement.active? ? 'success' : 'alert'}"
        b Legitymacja plastikowa: 
        - Db::Membership::Fee.where(kw_id: @profile.kw_id).order(updated_at: :desc).limit(5).each do |fee|
          = "#{fee.year} - #{fee.plastic? ? 'Tak' : 'Nie'}"
          br
        br

        - if @profile.kw_id.present?
          .row
            .large-12.columns 
              b Składki: 
              - if (@profile.position.include?('senior') || @profile.position.include?('honorable_kw'))
                span.label.secondary Zwolniony
              - else
                - @fees_repository.for_profile(kw_id: @profile.kw_id).each do |fee|
                  span.label.success data-tooltip="" tabindex="1" title=("#{fee.payment.cash ? 'Gotówka/Przelew na konto' : 'Dotpay' }: #{fee.cost} zł") = fee.year
              br

        - if !@profile.accepted
          b Wpisowe oraz pierwsza składka: 
          - if @profile.payment.present?
            - if @profile.payment.prepaid?
              span.label.success= @profile.cost
              span.label.success= @profile.created_at.year
            - else
              span.label.secondary= @profile.cost
              span.label.secondary= Membership::Activement.new.payment_year
              br
              - if @profile.payment.payment_url
                = link_to 'Link do płatności', @profile.payment.payment_url
              - else
                = link_to 'Stwórz link do płatności', charge_payment_path(@profile.payment)
          br
          - unless @profile.accepted
            - if @profile.sent_at
              = "Wysłano: #{@profile.sent_at}"
              br
              = link_to 'Wyślij e-mail z linkiem do płatności powtórnie', send_email_admin_profile_path(@profile.id), method: :put
            - else
              = link_to 'Wyślij e-mail zgłaszający pierwszy raz', send_email_admin_profile_path(@profile.id), method: :put

  - if @profile.remarks.present?
    .row
      .large-12.columns 
        b Uwagi: 
        .callout
          = sanitize @profile.remarks

  .row
    .large-12.columns
      hr

  .row
    .large-8.columns
      - if @profile.accepted?
        span.label.success Zaakceptowano
      - else
        = form_for :profile, url: accept_admin_profile_path(@profile.id), method: :put do |f|
          .input-group
            span.input-group-label
              | Numer członkowski
            = f.number_field :kw_id, class: 'input-group-field', value: Db::Profile.where.not(kw_id: 3884).maximum(:kw_id) + 1
            span.input-group-label
              | Data wstąpienia
            = f.date_field :application_date, class: 'input-group-field', style: 'width: 50px; font-size: 10px;', value: Date.today
            .input-group-button
              - if @profile.payment&.paid?
                = f.submit 'Nadaj i utwórz konto', class: 'button'
              - else
                = f.submit 'Nadaj i utwórz konto', class: 'button', data: { confirm: 'Jesteś pewien, że chcesz zaakceptować kandydata, który nie opłacił wpisowego? Jeżeli zapłacił przelewem tradycyjnym lub wszystko się zgadza, kliknij Ok i zaakceptujesz kandydata :)' }

    .large-4.columns
      .text-right
        - if @profile.user
          = link_to 'edytuj użytkownika', edit_admin_user_path(@profile.user.id, original_referrer: session[:original_referrer]), class: 'button alert'
        = link_to 'edytuj profil', edit_admin_profile_path(@profile.id, original_referrer: session[:original_referrer]), class: 'button alert'
        = link_to 'PDF', profile_path(@profile.id, format: :pdf), class: 'button warning'
        = link_to 'powrót', session[:original_referrer] || admin_profiles_path, class: 'button secondary'

.row
  .large-12.columns
    hr

- if user_signed_in?
  .row
    .large-12.columns
      h5 Komentarze, dodatkowe informacje
    .large-6.columns
        = render 'messaging/comments/comments', commentable: @profile
    .large-6.columns
      .callout
        = render 'messaging/comments/form', commentable: @profile
