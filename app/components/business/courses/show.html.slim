.row
  .large-6.columns
    ul#business_courses-tabs.tabs data-tabs="" 
      li.tabs-title.is-active
        a aria-selected="true" href="#fields" Dane kursu
      - if can?(:manage, @course)
        li.tabs-title
          a data-tabs-target="lists" href="#lists" Zapotrzebowanie
        li.tabs-title
          a data-tabs-target="history" href="#history" Historia zmian

    .tabs-content data-tabs-content="business_courses-tabs" 
      #fields.tabs-panel.is-active
        .row
          .large-6.columns
            h3= @course.name

        .row
          .large-6.columns
            .callout
              b Od: 
              = @course.starts_at&.to_date
          .large-6.columns
            .callout
              b Do: 
              = @course.ends_at&.to_date

        .row
          - if @course.seats
            .large-6.columns
              .callout
                b Zapisanych osób: 
                - if @course.event_id
                  = Training::Supplementary::Limiter.new(@course.event).sum
                - else
                  = @course.seats

          - if @course.max_seats
            .large-6.columns
              .callout
                b Maksymalna ilość miejsc: 
                = @course.max_seats

        .row
          - if @course.price
            .large-6.columns
              .callout
                b Cena: 
                = @course.price

          - if @course.instructor_id
            .large-6.columns
              .callout
                b Instruktor: 
                = @course.instructor&.display_name


        - if !@course.packages?
          - if @course.payment_first_cost > 0
            .row
              .large-6.columns
                .callout
                  b Zaliczka: 
                  = @course.payment_first_cost

              .large-6.columns
                .callout
                  b Reszta:
                  = @course.payment_second_cost

        .row
          - if @course.creator_id
            .large-6.columns
              .callout
                b Utworzył: 
                = Db::User.find(@course.creator_id).display_name

          - if @course.coordinator_id
            .large-6.columns
              .callout
                b Koordynuje: 
                = Db::User.find(@course.coordinator_id)&.display_name

        - if @course.description
          .row
            .large-12.columns
              .callout
                = sanitize @course.description

        - if can?(:manage, @course)
          - if @course.projects.any?
            .row
              .large-12.columns
                .callout
                  - @course.projects.each do |project|
                    = link_to project.name, admin_project_path(project.id)

          - if @course.sign_up_url
            .row
              .large-12.columns
                .callout
                  = link_to @course.sign_up_url, @course.sign_up_url

          - if @course.event_id
            .row
              .large-12.columns
                .callout
                  = link_to @course.event.name, polish_event_path(@course.event.slug)

            .row
              .large-12.columns
                ul
                  - Training::Supplementary::Limiter.new(@course.event).all_prepaid.each do |sign_up|
                    li = link_to sign_up.user_name, edit_supplementary_sign_up_path(sign_up.id), class: 'item'

        - if can?(:manage, @course)
          .row
            .large-4.columns
              = link_to 'edytuj', edit_course_path(@course.id), class: 'alert button large expanded'
            .large-4.columns
              = link_to 'excel', course_path(@course.id, format: :xlsx), class: 'warning button large expanded'
            .large-4.columns
              = link_to 'kursy', courses_path, class: 'secondary button large expanded'

      - if can?(:manage, @course)
        #lists.tabs-panel
          .callout.primary
            = sanitize @course.equipment
          br
          - @course.sign_ups.includes(:list).collect(&:list).compact.each do |record|
            .callout
              h6.dashboard-table-text= link_to record.sign_up.name, edit_business_sign_up_path(record.sign_up.id)
              span.dashboard-table-timestamp= record.sign_up.email
              br
              = sanitize "<b>Miejce urodzenia</b> #{record.birthplace}"
              br
              = sanitize "<b>Data urodzenia</b> #{record.birthdate}"
              br
              = sanitize "<b>E-mail dla grupy</b> #{record.alternative_email}"
              h5 Alternatywne terminy
              ul
                - record.courses.each do |course|
                  li = course.name_with_date
              = sanitize record.description

        #history.tabs-panel
          table.stack
            thead
              tr
                th width='20%' Kto?
                th width='20%' Co?
                th width='10%' Metadata
            tbody
              - @course.all_versions.includes(:item).reverse.each do |version|
                tr
                  td
                    - user = Db::User.find_by(id: version.whodunnit)
                    - if user
                      = user.display_name
                    - else
                      - if version.item_type == 'Business::SignUpRecord'
                        = version.item.name
                      - if version.item_type == 'Db::Payment'
                        = Business::SignUpRecord.find_by(id: version.item.payable_id)&.name
                      - if version.item_type == 'Business::ListRecord'
                        = version.item.sign_up.name
                  td
                    h6.dashboard-table-text= I18n.t version.event
                    span.dashboard-table-timestamp= I18n.t(version.item.class.name.underscore)
                  td
                    span data-tooltip='' tabindex="1" title="<ul class='dashboard-table-ul'>#{version.changeset.except('updated_at')}</ul>" data-allow-html="true"
                      span.dashboard-table-timestamp= version.created_at.strftime '%Y-%m-%d %H:%M'

  .large-6.columns
    - if @course.lists.any?
      h5 Alternatywne terminy
      .row
        .large-12.columns
          table.stack
            tbody
              - @course.lists.each_with_index do |list, i|
                tr
                  td
                    = link_to list.sign_up.course.name_with_date, edit_business_sign_up_path(list.sign_up_id)

    - if @course.sign_ups.any?
      - if can?(:manage, @course)
        = render 'sign_ups_table', sign_ups: @course.sign_ups.order(updated_at: :desc)

        .row
          .large-12.columns
            .callout
              = @course.sign_ups.map(&:email).join(', ')

    - if Rails.env.development?
      - if (user_signed_in? && current_user.roles.include?('business_courses')) || ::Business::SignUpRecord.exists?(code: params[:code])
        h5 Porozmawiaj
        - if false
          .row
            .large-12.columns
              h3 Nowa Wiadomość

              = form_tag business_conversations_path, method: :post do
                .row
                  .large-6.columns
                    = text_field_tag :subject, nil, placeholder: "Temat", required: true
                  .large-6.columns
                    = select_tag :user_id, options_for_select(@course.sign_ups.map { |u| [u.name, u.id] }, params[:recipient_id]),
                      { class: 'js-select-multiple', include_blank: true }
                .row
                  .large-12.columns
                    = hidden_field_tag :body, nil, { id: 'remarks_body' }
                    trix-editor input='remarks_body'
                .row
                  .large-12.columns
                    = submit_tag "Wyślij wiadomość", class: 'button expanded large'
        - if @conversation
          = render 'messaging/conversations/conversation', conversation: @conversation, participant: Business::SignUpRecord.find_by(code: params[:code]), users: @course.sign_ups
