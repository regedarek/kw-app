.row
  .large-12.columns
    - if @errors
      .callout.alert
        ul
          - @errors.each do |error|
            li= error.last.to_sentence

.row
  .large-12.columns
    .callout.primary
      .row
        .large-3.columns
          = f.label :name
          = f.text_field :name

        .large-3.columns
          = f.label :email
          = f.text_field :email

        .large-3.columns
          = f.label :expired_at
          = f.datetime_field :expired_at

        .large-3.columns
          = f.label :user_id
          = f.select :user_id,
            Db::User.all.map { |u| [u.display_name, u.id] },
            {include_blank: true },
            { class: 'js-select-multiple', include_blank: true }

      - if @sign_up.admin_id
        .row
          .large-12.columns
            | Ręcznie zapisał/a: 
            = Db::User.find(@sign_up.admin_id)&.display_name

.row
  - if @sign_up.course.packages?
    .large-6.columns
      .callout.primary
        = f.label :supplementary_course_package_type_id
        = f.collection_select :supplementary_course_package_type_id, @sign_up.course.package_types, :id, :name_with_cost, { include_blank: 'Wybierz pakiet' }, {}

  - if @sign_up.course.question
    .large-6.columns
      .callout.primary
        = f.label :question, 'Odpowiedź'
        = f.text_field :question
  = f.hidden_field :course_id, value: @sign_up.course_id

- if @sign_up.payment
  .row
    - if @sign_up.sent_at
      .large-8.columns
        .callout.warning
          - if @sign_up.sent_user_id
            b= Db::User.find(@sign_up.sent_user_id).display_name
            = " wysłał/a e-mail z linkiem do płatności "
          - else
            = "Wysłano e-mail z linkiem do płatności "
            b= @sign_up.sent_at.strftime("%d/%m/%Y %H:%M")
      .large-4.columns
        .callout.warning
          = link_to 'Wyślij ponownie', send_email_supplementary_sign_up_path(@sign_up.id), method: :put

    - else
      .large-12.columns
        .callout.warning
          = link_to 'Wyślij e-mail z linkiem do płatności', send_email_supplementary_sign_up_path(@sign_up.id), method: :put

  - if @sign_up.payment
    .row
      .large-3.columns
        - if @sign_up.payment.paid?
          .callout.success
            b Status: 
            = "#{I18n.t(@sign_up.payment.state)}"
        - else
          .callout.alert
            b Status: 
            = "#{I18n.t(@sign_up.payment.state)}"

      - unless @sign_up.payment.paid?
        .large-3.columns
          .callout.alert
            = link_to 'Oznacz jako opłacone gotówką', mark_as_paid_payment_path(@sign_up.payment.id), method: :put, data: { confirm: 'Czy napewno chcesz oznaczyć jako opłacono?' }

      .large-3.columns
        .callout.alert
          - if @sign_up.payment.cash?
            b Gotówka 
            - if @sign_up.payment.cash_user_id
              = "przez #{Db::User.find(@sign_up.payment.cash_user_id).display_name}"
            br
            = link_to 'Anuluj', cancel_cash_payment_supplementary_sign_up_path(@sign_up.id), method: :put
          - else
            - if @sign_up.payment && @sign_up.payment.payment_url
              = link_to 'Dotpay', @sign_up.payment.payment_url
            - else
              | Nie utworzono linku

      - if @sign_up.payment.paid? && @sign_up.payment.payment_url && !@sign_up.payment.cash
        .large-3.columns
          .callout.alert
            - if @sign_up.payment.refunded_at
              | Zwrócono: 
              = @sign_up.payment.refunded_at.strftime("%d/%m/%Y %H:%M")
            - else
              = link_to refund_payment_path(@sign_up.payment.id), method: :post, class: 'item', style: 'margin: 5px' do
                | Zwróć pełną kwotę
