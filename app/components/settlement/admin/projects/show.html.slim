.row
  .large-12.columns
    h4 = @project.name

- if @project.description.present?
  .row
    .large-12.columns
      .callout
        = @project.description

.row
  .large-12.columns
    .callout
      .row
        .large-4.columns
          b Utworzył: 
          = @project.user&.display_name
        .large-4.columns
          b Obszar: 
          = I18n.t(@project.area_type, scope: "activerecord.attributes.settlement/project_record.area_types")
        .large-4.columns
          b Kiedy: 
          = @project.created_at.strftime("%d/%m/%Y")

.row
  .large-6.columns
    h5 = "Wpływy (#{number_to_currency(Settlement::ProjectEntity.new.incomings_sum(@project), :unit => "zł")})"
    - @project.project_items.includes(:accountable).where(accountable_type: 'Training::Supplementary::CourseRecord').each do |item|
      .row
        .large-12.columns
          - if item
            = render "settlement/admin/projects/#{item.accountable_type.underscore}", item: item

    - @project.project_items.includes(:accountable).where(accountable_type: 'Business::CourseRecord').each do |item|
      .row
        .large-12.columns
          - if item
            = render "settlement/admin/projects/#{item.accountable_type.underscore}", item: item

    - @project.project_items.includes(:accountable).where(accountable_type: 'Settlement::IncomeRecord').each do |item|
      .row
        .large-12.columns
          - if item
            = render "settlement/admin/projects/#{item.accountable_type.underscore}", item: item

    .callout
      = form_for Settlement::IncomeRecord.new, as: :income, url: admin_incomes_path, method: :post do |f|
        = hidden_field_tag :project_id, params[:id]
        .row
          .large-6.columns
            = f.text_field :name
          .large-6.columns
            = f.text_area :description
        .row
          .large-12.columns
            = f.number_field :cost, step: 0.1
            = f.submit 'Dodaj wpływ', class: 'button'

    .callout
      = form_for Settlement::ProjectItemRecord.new, as: :project_item, url: admin_project_items_path, method: :post do |f|
        = f.hidden_field :project_id, value: params[:id]
        = f.hidden_field :accountable_type, value: 'Training::Supplementary::CourseRecord'
        .row
          .large-12.columns
            = f.select :accountable_id,
              Training::Supplementary::CourseRecord.all.map { |p| ["#{p.id}-#{p.name}", p.id] },
              { include_blank: true },
              { class: 'js-select-multiple' }
        .row
          .large-12.columns
            br
            = f.submit 'Dodaj wydarzenie', class: 'button'

  .large-6.columns
    h5 = "Koszty (#{number_to_currency(Settlement::ProjectEntity.new.outcomings_sum(@project), unit: 'zł')})"
    - @project.project_items.includes(accountable: [:creator, :contractor]).where(accountable_type: 'Settlement::ContractRecord').each do |item|
      - if item
        = render "settlement/admin/projects/#{item.accountable_type.underscore}", item: item

    .callout
      = form_for Settlement::ProjectItemRecord.new, as: :project_item, url: admin_project_items_path, method: :post do |f|
        = f.hidden_field :project_id, value: params[:id]
        = f.hidden_field :accountable_type, value: 'Settlement::ContractRecord'
        .row
          .large-12.columns
            = f.select :accountable_id,
              Settlement::ContractRecord.all.map { |p| ["#{p.id}-#{p.title}", p.id] },
              { include_blank: true },
              { class: 'js-select-multiple' }
        .row
          .large-12.columns
            br
            = f.submit 'Dodaj koszt', class: 'button'

    = link_to 'wróć do projektów', admin_projects_path, class: 'secondary button large expanded'
.row
  .large-12.columns
    h5 Komentarze, dodatkowe informacje
    - if user_signed_in?
      .row
        .large-12.columns
          = render 'messaging/comments/comments', commentable: @project
        .large-12.columns
          .callout
            = render 'messaging/comments/form', commentable: @project
