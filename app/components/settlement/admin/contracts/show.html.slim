.row
  .large-6.columns
    .row
      .large-12.columns
        h3 = @contract.title

    .callout
      .row
        .large-12.columns
          b Kontrahent: 
          = link_to @contract.contractor.name, admin_contractor_path(@contract.contractor.id)

      .row
        .large-12.columns
          b Numer dokumentu: 
          = @contract.document_number

      .row
        .large-12.columns
          b Data dokumentu: 
          = @contract.document_date

      .row
        .large-12.columns
          b Rodzaj dokumentu: 
          = I18n.t @contract.document_type

      .row
        .large-6.columns
          b Kwota rozliczenia: 
          = @contract.cost
          |  zł
      - if @contract.period_date
        .row
          .large-12.columns
            b Okres rozliczeniowy: 
            = I18n.localize(@contract.period_date, format: "%B %Y")

      .row
        .large-12.columns
          b Kiedy utworzono: 
          = @contract.created_at.strftime("%d-%m-%Y %H:%M")

      .row
        .large-12.columns
          b Kto utworzył rozliczenie: 
          = @contract.creator&.display_name

      .row
        .large-12.columns
          b Płatność: 
          = I18n.t @contract.payout_type, scope: :payout_type

      .row
        .large-12.columns
          b Status: 
          = render 'state_bagde', contract: @contract, class_value: ''

    .callout class=("#{@contract.preclosed? ? 'success' : 'alert'}")
      .row
        .large-12.columns
          b Sekcja: 
          = I18n.t @contract.group_type

      - if @contract.activity_type
        .row
          .large-12.columns
            b Aktywność: 
            = I18n.t(@contract.activity_type, scope: 'activerecord.attributes.settlement/contract_record.activity_types')

      .row
        .large-12.columns
          b Impreza: 
          - if @contract.event_type
            = I18n.t(@contract.event_type, scope: 'activerecord.attributes.settlement/contract_record.event_types')

      - if @contract.checker
        .row
          .large-12.columns
            b Sprawdził/a: 
            = @contract.checker.display_name

      - if @contract.acceptor
        .row
          .large-12.columns
            b Zaakceptował/a: 
            = @contract.acceptor.display_name

    .callout class=("#{@contract.closed? ? 'success' : 'alert'}")
      .row
        .large-12.columns
          b Rodzaj wydatku: 
          - if @contract.substantive_type
            = I18n.t(@contract.substantive_type, scope: 'activerecord.attributes.settlement/contract_record.substantive_types')

      .row
        .large-12.columns
          b Obszar: 
          - if @contract.area_type
            = I18n.t(@contract.area_type, scope: 'activerecord.attributes.settlement/contract_record.area_types')

      .row
        .large-12.columns
          b Rodzaj płatności: 
          - if @contract.financial_type
            = I18n.t(@contract.financial_type, scope: 'activerecord.attributes.settlement/contract_record.financial_types')

    - if @contract.description
      .row
        .large-12.columns
          .callout
            = sanitize @contract.description

    .row
      .large-6.columns
        - if @contract.projects.any?
          b Projekty
          ul
            - @contract.projects.each do |project|
              li = link_to project.name, admin_project_path(project.id)

      .large-6.columns
        - if @contract.users.any?
          b Osoby zainteresowane rozliczeniem
          ul
            - @contract.users.each do |user|
              li = user.display_name

    - if @contract.events.any?
      .row
        .large-12.columns
          b Powiązane wydarzenia
          ul
            - @contract.events.each do |event|
              li = link_to event.name, wydarzenia_path(event.id)

    - if @contract.photos.any?
      .row
        .large-12.columns
          - @contract.photos.select{|photo| !MimeMagic.by_path(photo.file.path)&.image? }.each do |photo|
            = link_to photo.file.url, download: File.basename(photo.file.path) do
              = image_tag('file.jpg', class: 'thumbnail', width: '58px')
              - if can?(:update, @contract)
                = link_to upload_path(photo.id), data: { confirm: 'Jesteś pewien?' }, method: :delete, class: 'thumb-close-button' do
                  span aria-hidden="true"  &times;
            br
          - @contract.photos.select{|photo| MimeMagic.by_path(photo.file.path)&.image? }.each_with_index do |photo, i|
            - unless photo.file.blank? || photo.file.medium.blank?
              = image_tag photo.file.medium.url, class: 'thumbnail', data: { open: "reveal-#{photo.id}-#{i}", 'img-src': photo.file.url }
              div id="reveal-#{photo.id}-#{i}" class='js-photo-reveal full reveal' data-reveal="" data-img-src="#{photo.file.url}" data-index="-#{photo.id}-#{i}"
                h3 Ładuję...
              - if can?(:update, @contract)
                = link_to upload_path(photo.id), data: { confirm: 'Jesteś pewien?' }, method: :delete, class: 'photo-close-button' do
                  span aria-hidden="true"  &times;

    - if @contract.attachments.any?
      .row
        .large-12.columns
          - @contract.attachments.select{|file| !MimeMagic.by_path(file.path)&.image? }.each do |attachment|
            = link_to attachment.url, download: File.basename(attachment.file.path) do
              = image_tag('file.jpg', class: 'thumbnail')
              |  
              = File.basename(attachment.file.path)
            br
          - @contract.attachments.select{|file| MimeMagic.by_path(file.path)&.image? }.each_with_index do |photo, i|
            - unless photo.blank? || photo.thumb.blank?
              = image_tag photo.thumb.url, class: 'thumbnail', data: { toggle: "photo-#{i}" }

              div id="photo-#{i}" class="full reveal" data-reveal="" 
                = image_tag photo.url
                button.close-button aria-label=("Close reveal") data-close="" type="button" 
                  span aria-hidden="true"  &times;

    .row
      .large-12.columns
        = render 'state_link', contract: @contract, class_value: 'button alert'
        - if can? :update, @contract
          = link_to 'edytuj rozliczenie', edit_admin_contract_path(@contract.id), class: 'button warning'
        = link_to 'wróć do rozliczeń', admin_contracts_path, class: 'button secondary'

  .large-6.columns
    h5 Komentarze, dodatkowe informacje
    - if user_signed_in?
      .row
        .large-12.columns
          = render 'messaging/comments/comments', commentable: @contract
        .large-12.columns
          .callout
            = render 'messaging/comments/form', commentable: @contract

